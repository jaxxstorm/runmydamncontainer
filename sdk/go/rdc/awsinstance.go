// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rdc

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AWSInstance struct {
	pulumi.ResourceState

	// url of your running container
	Url pulumi.StringOutput `pulumi:"url"`
}

// NewAWSInstance registers a new resource with the given unique name, arguments, and options.
func NewAWSInstance(ctx *pulumi.Context,
	name string, args *AWSInstanceArgs, opts ...pulumi.ResourceOption) (*AWSInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Image == nil {
		return nil, errors.New("invalid value for required argument 'Image'")
	}
	if args.Port == nil {
		return nil, errors.New("invalid value for required argument 'Port'")
	}
	var resource AWSInstance
	err := ctx.RegisterRemoteComponentResource("rdc:index:AWSInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type awsinstanceArgs struct {
	// The image you want to run
	Image string `pulumi:"image"`
	Port  int    `pulumi:"port"`
}

// The set of arguments for constructing a AWSInstance resource.
type AWSInstanceArgs struct {
	// The image you want to run
	Image pulumi.StringInput
	Port  pulumi.IntInput
}

func (AWSInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsinstanceArgs)(nil)).Elem()
}

type AWSInstanceInput interface {
	pulumi.Input

	ToAWSInstanceOutput() AWSInstanceOutput
	ToAWSInstanceOutputWithContext(ctx context.Context) AWSInstanceOutput
}

func (*AWSInstance) ElementType() reflect.Type {
	return reflect.TypeOf((*AWSInstance)(nil))
}

func (i *AWSInstance) ToAWSInstanceOutput() AWSInstanceOutput {
	return i.ToAWSInstanceOutputWithContext(context.Background())
}

func (i *AWSInstance) ToAWSInstanceOutputWithContext(ctx context.Context) AWSInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AWSInstanceOutput)
}

func (i *AWSInstance) ToAWSInstancePtrOutput() AWSInstancePtrOutput {
	return i.ToAWSInstancePtrOutputWithContext(context.Background())
}

func (i *AWSInstance) ToAWSInstancePtrOutputWithContext(ctx context.Context) AWSInstancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AWSInstancePtrOutput)
}

type AWSInstancePtrInput interface {
	pulumi.Input

	ToAWSInstancePtrOutput() AWSInstancePtrOutput
	ToAWSInstancePtrOutputWithContext(ctx context.Context) AWSInstancePtrOutput
}

type awsinstancePtrType AWSInstanceArgs

func (*awsinstancePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AWSInstance)(nil))
}

func (i *awsinstancePtrType) ToAWSInstancePtrOutput() AWSInstancePtrOutput {
	return i.ToAWSInstancePtrOutputWithContext(context.Background())
}

func (i *awsinstancePtrType) ToAWSInstancePtrOutputWithContext(ctx context.Context) AWSInstancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AWSInstancePtrOutput)
}

// AWSInstanceArrayInput is an input type that accepts AWSInstanceArray and AWSInstanceArrayOutput values.
// You can construct a concrete instance of `AWSInstanceArrayInput` via:
//
//          AWSInstanceArray{ AWSInstanceArgs{...} }
type AWSInstanceArrayInput interface {
	pulumi.Input

	ToAWSInstanceArrayOutput() AWSInstanceArrayOutput
	ToAWSInstanceArrayOutputWithContext(context.Context) AWSInstanceArrayOutput
}

type AWSInstanceArray []AWSInstanceInput

func (AWSInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AWSInstance)(nil)).Elem()
}

func (i AWSInstanceArray) ToAWSInstanceArrayOutput() AWSInstanceArrayOutput {
	return i.ToAWSInstanceArrayOutputWithContext(context.Background())
}

func (i AWSInstanceArray) ToAWSInstanceArrayOutputWithContext(ctx context.Context) AWSInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AWSInstanceArrayOutput)
}

// AWSInstanceMapInput is an input type that accepts AWSInstanceMap and AWSInstanceMapOutput values.
// You can construct a concrete instance of `AWSInstanceMapInput` via:
//
//          AWSInstanceMap{ "key": AWSInstanceArgs{...} }
type AWSInstanceMapInput interface {
	pulumi.Input

	ToAWSInstanceMapOutput() AWSInstanceMapOutput
	ToAWSInstanceMapOutputWithContext(context.Context) AWSInstanceMapOutput
}

type AWSInstanceMap map[string]AWSInstanceInput

func (AWSInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AWSInstance)(nil)).Elem()
}

func (i AWSInstanceMap) ToAWSInstanceMapOutput() AWSInstanceMapOutput {
	return i.ToAWSInstanceMapOutputWithContext(context.Background())
}

func (i AWSInstanceMap) ToAWSInstanceMapOutputWithContext(ctx context.Context) AWSInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AWSInstanceMapOutput)
}

type AWSInstanceOutput struct {
	*pulumi.OutputState
}

func (AWSInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AWSInstance)(nil))
}

func (o AWSInstanceOutput) ToAWSInstanceOutput() AWSInstanceOutput {
	return o
}

func (o AWSInstanceOutput) ToAWSInstanceOutputWithContext(ctx context.Context) AWSInstanceOutput {
	return o
}

func (o AWSInstanceOutput) ToAWSInstancePtrOutput() AWSInstancePtrOutput {
	return o.ToAWSInstancePtrOutputWithContext(context.Background())
}

func (o AWSInstanceOutput) ToAWSInstancePtrOutputWithContext(ctx context.Context) AWSInstancePtrOutput {
	return o.ApplyT(func(v AWSInstance) *AWSInstance {
		return &v
	}).(AWSInstancePtrOutput)
}

type AWSInstancePtrOutput struct {
	*pulumi.OutputState
}

func (AWSInstancePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AWSInstance)(nil))
}

func (o AWSInstancePtrOutput) ToAWSInstancePtrOutput() AWSInstancePtrOutput {
	return o
}

func (o AWSInstancePtrOutput) ToAWSInstancePtrOutputWithContext(ctx context.Context) AWSInstancePtrOutput {
	return o
}

type AWSInstanceArrayOutput struct{ *pulumi.OutputState }

func (AWSInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AWSInstance)(nil))
}

func (o AWSInstanceArrayOutput) ToAWSInstanceArrayOutput() AWSInstanceArrayOutput {
	return o
}

func (o AWSInstanceArrayOutput) ToAWSInstanceArrayOutputWithContext(ctx context.Context) AWSInstanceArrayOutput {
	return o
}

func (o AWSInstanceArrayOutput) Index(i pulumi.IntInput) AWSInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AWSInstance {
		return vs[0].([]AWSInstance)[vs[1].(int)]
	}).(AWSInstanceOutput)
}

type AWSInstanceMapOutput struct{ *pulumi.OutputState }

func (AWSInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AWSInstance)(nil))
}

func (o AWSInstanceMapOutput) ToAWSInstanceMapOutput() AWSInstanceMapOutput {
	return o
}

func (o AWSInstanceMapOutput) ToAWSInstanceMapOutputWithContext(ctx context.Context) AWSInstanceMapOutput {
	return o
}

func (o AWSInstanceMapOutput) MapIndex(k pulumi.StringInput) AWSInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AWSInstance {
		return vs[0].(map[string]AWSInstance)[vs[1].(string)]
	}).(AWSInstanceOutput)
}

func init() {
	pulumi.RegisterOutputType(AWSInstanceOutput{})
	pulumi.RegisterOutputType(AWSInstancePtrOutput{})
	pulumi.RegisterOutputType(AWSInstanceArrayOutput{})
	pulumi.RegisterOutputType(AWSInstanceMapOutput{})
}
