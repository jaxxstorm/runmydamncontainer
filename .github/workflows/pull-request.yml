env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GO111MODULE: "on"
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  NUGET_PUBLISH_KEY: ${{ secrets.NUGET_PUBLISH_KEY }}
  PROVIDER: rdc
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  PULUMI_API: https://api.pulumi.com
  PULUMI_LOCAL_NUGET: ${{ github.workspace }}/nuget
  PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
jobs:
  publish_sdk:
    name: publish_sdk
    needs: build_sdk
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
    - name: Checkout Scripts Repo
      uses: actions/checkout@v2
      with:
        path: ci-scripts
        repository: pulumi/scripts
        ref: cd87b45d3187e45b5b9a7d99e885c9bcc436990a
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow --tags
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.goversion }}
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@v1.1.0
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/action-install-pulumi-cli@v1.0.1
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        always-auth: true
        registry-url: https://registry.npmjs.org
    - name: Setup DotNet
      uses: actions/setup-dotnet@v1
    - name: Setup Python
      uses: actions/setup-python@v1
    - name: Download Python SDK
      uses: actions/download-artifact@v2
      with:
        name: python-sdk.tar.gz
        path: ${{ github.workspace}}/sdk
    - name: Unzip Python SDK
      run: tar -zxf ${{ github.workspace}}/sdk/python.tar.gz -C ${{ github.workspace}}/sdk/python
    - name: Install Twine
      run: python -m pip install pip twine
    - name: Download NodeJS SDK
      uses: actions/download-artifact@v2
      with:
        name: nodejs-sdk.tar.gz
        path: ${{ github.workspace}}/sdk
    - name: Unzip NodeJS SDK
      run: tar -zxf ${{ github.workspace}}/sdk/nodejs.tar.gz -C ${{ github.workspace}}/sdk/nodejs
    - name: Download DotNet SDK
      uses: actions/download-artifact@v2
      with:
        name: dotnet-sdk.tar.gz
        path: ${{ github.workspace}}/sdk
    - name: Unzip DotNet SDK
      run: tar -zxf ${{ github.workspace}}/sdk/dotnet.tar.gz -C ${{ github.workspace}}/sdk/dotnet
    - env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      name: Publish SDKs
      run: ./ci-scripts/ci/publish-tfgen-package ${{ github.workspace }}
  build_provider:
    name: Build Provider
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow --tags
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.x
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@v1.1.0
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/action-install-pulumi-cli@v1.0.1
    - name: Set PreRelease Version
      run: |
        echo "GORELEASER_CURRENT_TAG=v$(pulumictl get version --language generic)" >> $GITHUB_ENV
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        args: -f .goreleaser.prerelease.yml --rm-dist --snapshot
        version: latest
  build_sdk:
    name: Build ${{ matrix.language }}
    runs-on: ubuntu-latest
    needs: build_provider
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
    - name: Checkout Scripts Repo
      uses: actions/checkout@v2
      with:
        path: ci-scripts
        repository: pulumi/scripts
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow --tags
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.goversion }}
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@v1.1.0
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/action-install-pulumi-cli@v1.0.1
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: ${{matrix.nodeversion}}
        registry-url: https://registry.npmjs.org
    - name: Setup DotNet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{matrix.dotnetverson}}
    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{matrix.pythonversion}}
    - name: Install Taskfile
      uses: Arduino/actions/setup-taskfile@master
    - name: Build SDK
      run: task build:${{ matrix.language }}
    - name: Check worktree clean
      run: ./ci-scripts/ci/check-worktree-is-clean
    - name: Compress SDK folder
      run: tar -zcf sdk/${{ matrix.language }}.tar.gz -C sdk/${{ matrix.language }} .
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.language  }}-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/${{ matrix.language }}.tar.gz
    strategy:
      fail-fast: true
      matrix:
        dotnetversion:
        - 3.1.301
        goversion:
        - 1.16.x
        language:
        - nodejs
        - python
        - dotnet
        - go
        nodeversion:
        - 14.x
        pythonversion:
        - "3.9"
name: pull-request
"on":
  pull_request:
    branches:
    - main
